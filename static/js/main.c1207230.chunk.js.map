{"version":3,"sources":["Hero/Hero.js","Character-Cards/Character-Cards.js","Create-Character/Create-Character.js","App/App.js","index.js"],"names":["Hero","lightMode","textH1","textH3","bar","unleashed","className","Characters","name","age","bio","link","likes","dislikes","skillName","skillDescrp","animeName","url","cards","buttonTrash","buttonGeneral","buttonLikeGroup","h1Dark","pDark","modalHeader","modalName","modalSection","modalFooter","useState","modalClass","setModalClass","src","alt","onClick","href","CreateCharacter","toggle","slider","buttonCreateChar","modalInput","buttonPlusMinus","setName","setAge","setBio","setSkillName","skillDescr","setSkillDescr","setAnimeName","setUrl","image","setImage","handleInput","e","type","persist","value","target","handleValueUpdates","id","htmlFor","placeholder","onChange","axios","method","data","skills","description","favorited","then","res","console","log","alert","App","props","state","characters","sliderState","hero","charCards","create","enableDarkMode","bind","enableLightMode","fetch","json","jsonRes","setState","catch","err","this","toggleSlider","map","character","key","_id","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1207230.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Hero({ lightMode, textH1, textH3, bar, unleashed }) {\n  return (\n    <section className={lightMode}>\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <figure className=\"center\">\n            <h1 className={textH1}>A</h1>\n            <h3 className={textH3}>nimated</h3>\n            <h1 className={textH1}>P</h1>\n            <h3 className={textH3}>eople</h3>\n            <h1 className={textH1}>I</h1>\n            <h3 className={textH3}>nitiative</h3>\n            <h2 className={bar}>&nbsp;|&nbsp;</h2>\n            <h2 className={unleashed}>Unleashed</h2>\n          </figure>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Characters({\n  name,\n  age,\n  bio,\n  link,\n  likes,\n  dislikes,\n  skillName,\n  skillDescrp,\n  animeName,\n  url,\n  cards,\n  buttonTrash,\n  buttonGeneral,\n  buttonLikeGroup,\n  h1Dark,\n  pDark,\n  modalHeader,\n  modalName,\n  modalSection,\n  modalFooter,\n}) {\n  const [modalClass, setModalClass] = useState(\"modal\");\n\n  const activateModal = () => {\n    setModalClass(\"modal is-active\");\n  };\n\n  const closeModal = () => {\n    setModalClass(\"modal\");\n  };\n\n  return (\n    <article className={cards}>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          <img src={link} className=\"is-128x128\" alt=\"\" />\n          <div className=\"field is-grouped mt-4\">\n            <h1 className={h1Dark}>{name}</h1>\n            <div className=\"level-right\">\n              <div className=\"buttons has-addons level-right\">\n                <button className={buttonTrash}>\n                  <span className=\"icon has-text-danger-dark\">\n                    <i className=\"fas fa-trash-alt\"></i>\n                  </span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <p className={h1Dark}>Age: {age}</p>\n          <div className=\"field is-grouped is-primary\">\n            <p className=\"control\">\n              <button className={buttonGeneral}>\n                <span className=\"icon is-small has-text-white-ter\">\n                  <i className=\"fas fa-heart\"></i>\n                </span>\n              </button>\n            </p>\n            <p className=\"control\">\n              <button className={buttonGeneral} onClick={activateModal}>\n                More Info\n              </button>\n            </p>\n          </div>\n          <div className=\"level mt-2\">\n            <div className=\"field is-grouped level-left mt-3\">\n              <p className={pDark}>Likes: {likes}</p>\n              <p className={pDark}>Dislikes: {dislikes} </p>\n            </div>\n            <div className=\"level-right\">\n              <div className=\"buttons has-addons level-right\">\n                <button className={buttonLikeGroup}>\n                  <span className=\"icon is-small has-text-success\">\n                    <i className=\"fas fa-thumbs-up\"></i>\n                  </span>\n                </button>\n                <button className={buttonLikeGroup}>\n                  <span className=\"icon is-small has-text-danger-dark\">\n                    <i className=\"fas fa-thumbs-down\"></i>\n                  </span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={modalClass}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className={modalHeader}>\n            <p className={modalName}>{name}</p>\n          </header>\n          <section className={modalSection}>\n            <p>\n              <b>Bio: </b>\n              {bio}\n            </p>\n            <p>\n              <b>Skills: </b>\n              {skillName}-{skillDescrp}\n            </p>\n            <p>\n              <b>Anime Name: </b>\n              {animeName}\n            </p>\n            <p>\n              <b>URL: </b>\n              <a href={url} alt=\"\">\n                Read More\n              </a>\n            </p>\n          </section>\n          <footer className={modalFooter}>\n            <button className={buttonGeneral} onClick={closeModal}>\n              Close\n            </button>\n          </footer>\n        </div>\n      </div>\n    </article>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function CreateCharacter({\n  lightMode,\n  toggle,\n  slider,\n  buttonCreateChar,\n  buttonGeneral,\n  modalHeader,\n  modalName,\n  modalSection,\n  modalFooter,\n  modalInput,\n  buttonPlusMinus,\n}) {\n  const [modalClass, setModalClass] = useState(\"modal\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [skillName, setSkillName] = useState(\"\");\n  const [skillDescr, setSkillDescr] = useState(\"\");\n  const [animeName, setAnimeName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const handleInput = (e, type) => {\n    e.persist();\n    const value = e.target.value;\n    handleValueUpdates[type](value);\n  };\n\n  const handleValueUpdates = {\n    name: setName,\n    age: setAge,\n    bio: setBio,\n    animeName: setAnimeName,\n    url: setUrl,\n    image: setImage,\n    skillName: setSkillName,\n    skillDescr: setSkillDescr,\n  };\n\n  const activateModal = () => {\n    setModalClass(\"modal is-active\");\n  };\n\n  const closeModal = () => {\n    setModalClass(\"modal\");\n  };\n\n  const createCharacter = () => {\n    axios({\n      method: \"post\",\n      url: \"https://lexleach-api-project.herokuapp.com/characters\",\n      data: {\n        name: name,\n        age: age,\n        bio: bio,\n        skills: [\n          {\n            name: skillName,\n            description: skillDescr,\n          },\n          {\n            name: \"\",\n            description: \"\",\n          },\n        ],\n        animeName: animeName,\n        url: url,\n        image: image,\n        favorited: true,\n        likes: 0,\n        dislikes: 0,\n      },\n    }).then((res) => {\n      console.log(res);\n    });\n    alert(\"New Character Created!\");\n  };\n\n  return (\n    <div className={lightMode}>\n      <div className=\"level\">\n        <div className=\"field level-left\">\n          <input\n            id=\"switch\"\n            type=\"checkbox\"\n            name=\"switch\"\n            className={slider}\n            onClick={toggle}\n          ></input>\n          <label htmlFor=\"switch\">Dark Mode</label>\n        </div>\n        <button className={buttonCreateChar} onClick={activateModal}>\n          Create Character\n        </button>\n      </div>\n      <div className={modalClass}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className={modalHeader}>\n            <p className={modalName}>Create a Character</p>\n          </header>\n          <section className={modalSection}>\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  className={modalInput}\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  onChange={(e) => handleInput(e, \"name\")}\n                ></input>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  className={modalInput}\n                  type=\"text\"\n                  placeholder=\"Age\"\n                  onChange={(e) => handleInput(e, \"age\")}\n                ></input>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  className={modalInput}\n                  type=\"text\"\n                  placeholder=\"Bio\"\n                  onChange={(e) => handleInput(e, \"bio\")}\n                ></input>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  className={modalInput}\n                  type=\"text\"\n                  placeholder=\"Anime Name\"\n                  onChange={(e) => handleInput(e, \"animeName\")}\n                ></input>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  className={modalInput}\n                  type=\"text\"\n                  placeholder=\"Read More URL\"\n                  onChange={(e) => handleInput(e, \"url\")}\n                ></input>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  className={modalInput}\n                  type=\"text\"\n                  placeholder=\"Image\"\n                  onChange={(e) => handleInput(e, \"image\")}\n                ></input>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <div className=\"field is-grouped\">\n                  <h3>Skill</h3>\n                  <div className=\"level-right\">\n                    <div className=\"buttons has-addons level-right\">\n                      <button className={buttonPlusMinus}>\n                        <span className=\"icon is-small has-text-success\">\n                          <i className=\"fas fa-plus-square\"></i>\n                        </span>\n                      </button>\n                      <button className={buttonPlusMinus}>\n                        <span className=\"icon is-small has-text-danger-dark\">\n                          <i className=\"fas fa-minus-square\"></i>\n                        </span>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <input\n                  className={modalInput}\n                  type=\"text\"\n                  placeholder=\"Skill Name\"\n                  onChange={(e) => handleInput(e, \"skillName\")}\n                ></input>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control\">\n                <input\n                  className={modalInput}\n                  type=\"text\"\n                  placeholder=\"Skill Description\"\n                  onChange={(e) => handleInput(e, \"skillDescr\")}\n                ></input>\n              </div>\n            </div>\n          </section>\n          <footer className={modalFooter}>\n            <div className=\"buttons\">\n              <button className={buttonGeneral} onClick={closeModal}>\n                Close\n              </button>\n              <button className={buttonGeneral} onClick={createCharacter}>\n                Create Character\n              </button>\n            </div>\n          </footer>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Hero from \"../Hero/Hero\";\nimport Characters from \"../Character-Cards/Character-Cards\";\nimport Create from \"../Create-Character/Create-Character\";\nimport \"../css/mystyles.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      characters: [],\n      sliderState: \"switch is-link is-small\",\n      lightMode: {\n        hero: \"hero is-info\",\n        charCards: \"has-background-white\",\n        cards: \"media notification is-danger\",\n        create: \"section has-background-white\",\n        buttonTrash: \"button is-danger\",\n        buttonGeneral: \"button is-primary\",\n        buttonLikeGroup: \"button is-primary is-small\",\n        buttonPlusMinus: \"button is-white is-small\",\n        buttonCreateChar: \"button level-right is-primary\",\n        textH1: \"is-size-1 has-text-primary\",\n        textH3: \"has-text-white\",\n        unleashed: \"has-text-info\",\n        bar: \"has-text-info\",\n        h1Dark: \"is-size-4\",\n        pDark: \"control is-size-7\",\n        modalHeader: \"modal-card-head has-background-danger\",\n        modalName: \"modal-card-title\",\n        modalSection: \"modal-card-body has-text-black\",\n        modalFooter: \"modal-card-foot has-background-danger\",\n        modalInput: \"input is-info\",\n      },\n    };\n    this.enableDarkMode = this.enableDarkMode.bind(this);\n    this.enableLightMode = this.enableLightMode.bind(this);\n  }\n\n  componentDidMount() {\n    const url = \"https://lexleach-api-project.herokuapp.com/characters\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((jsonRes) => {\n        console.log(\"==========================\");\n        console.log(jsonRes);\n        console.log(\"==========================\");\n        this.setState({ characters: jsonRes });\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong!\");\n      });\n  }\n\n  toggleSlider() {\n    if (this.state.sliderState === \"switch is-link is-small\") {\n      return this.enableDarkMode;\n    } else {\n      return this.enableLightMode;\n    }\n  }\n\n  enableDarkMode() {\n    this.setState({\n      lightMode: {\n        hero: \"has-background-grey-dark\",\n        charCards: \"has-background-grey-lighter\",\n        create: \"section has-background-grey-lighter\",\n        cards: \"media notification has-background-grey-dark\",\n        buttonTrash: \"button is-warning\",\n        buttonGeneral: \"button is-link\",\n        buttonLikeGroup: \"button is-link is-small\",\n        buttonCreateChar: \"button level-right is-link\",\n        buttonPlusMinus: \"button is-warning is-small\",\n        textH1: \"is-size-1 has-text-link\",\n        textH3: \"has-text-white\",\n        unleashed: \"has-text-link\",\n        bar: \"has-text-link\",\n        h1Dark: \"is-size-4 has-text-link\",\n        pDark: \"control is-size-7 has-text-link\",\n        modalHeader: \"modal-card-head has-background-grey-dark\",\n        modalName: \"modal-card-title has-text-link\",\n        modalSection:\n          \"modal-card-body has-text-link has-background-grey-lighter\",\n        modalFooter: \"modal-card-foot has-background-grey-dark\",\n        modalInput: \"input is-link\",\n      },\n    });\n    this.setState({ sliderState: \"switch is-link is-small DarkMode\" });\n  }\n\n  enableLightMode() {\n    this.setState({\n      lightMode: {\n        hero: \"hero is-info\",\n        charCards: \"has-background-white\",\n        cards: \"media notification is-danger\",\n        create: \"section has-background-white\",\n        buttonTrash: \"button is-danger\",\n        buttonGeneral: \"button is-primary\",\n        buttonLikeGroup: \"button is-primary is-small\",\n        buttonCreateChar: \"button level-right is-primary\",\n        buttonPlusMinus: \"button is-white is-small\",\n        textH1: \"is-size-1 has-text-primary\",\n        unleashed: \"has-text-info\",\n        bar: \"has-text-info\",\n        h1Dark: \"is-size-4\",\n        pDark: \"control is-size-7\",\n        modalHeader: \"modal-card-head has-background-danger\",\n        modalName: \"modal-card-title\",\n        modalSection: \"modal-card-body has-text-black\",\n        modalFooter: \"modal-card-foot has-background-danger\",\n        modalInput: \"input is-info\",\n      },\n    });\n    this.setState({ sliderState: \"switch is-link is-small\" });\n  }\n\n  render() {\n    return (\n      <div className=\"has-background-white\">\n        <Hero\n          lightMode={this.state.lightMode.hero}\n          textH1={this.state.lightMode.textH1}\n          textH3={this.state.lightMode.textH3}\n          bar={this.state.lightMode.bar}\n          unleashed={this.state.lightMode.unleashed}\n        />\n        <Create\n          lightMode={this.state.lightMode.create}\n          toggle={this.toggleSlider()}\n          slider={this.state.sliderState}\n          buttonCreateChar={this.state.lightMode.buttonCreateChar}\n          buttonGeneral={this.state.lightMode.buttonGeneral}\n          modalHeader={this.state.lightMode.modalHeader}\n          modalName={this.state.lightMode.modalName}\n          modalSection={this.state.lightMode.modalSection}\n          modalFooter={this.state.lightMode.modalFooter}\n          modalInput={this.state.lightMode.modalInput}\n          buttonPlusMinus={this.state.lightMode.buttonPlusMinus}\n        />\n        <section className={this.state.lightMode.charCards}>\n          <div className=\"container\">\n            <div className=\"columns is-multiline is-vcentered\">\n              {this.state.characters.map((character) => {\n                return (\n                  <div className=\"column is-one-third\" key={character._id}>\n                    <Characters\n                      link={character.image}\n                      name={character.name}\n                      age={character.age}\n                      bio={character.bio}\n                      skillName={character.skills[0].name}\n                      skillDescrp={character.skills[0].description}\n                      likes={character.likes}\n                      dislikes={character.dislikes}\n                      animeName={character.animeName}\n                      url={character.url}\n                      cards={this.state.lightMode.cards}\n                      buttonTrash={this.state.lightMode.buttonTrash}\n                      buttonGeneral={this.state.lightMode.buttonGeneral}\n                      buttonLikeGroup={this.state.lightMode.buttonLikeGroup}\n                      h1Dark={this.state.lightMode.h1Dark}\n                      pDark={this.state.lightMode.pDark}\n                      modalHeader={this.state.lightMode.modalHeader}\n                      modalName={this.state.lightMode.modalName}\n                      modalSection={this.state.lightMode.modalSection}\n                      modalFooter={this.state.lightMode.modalFooter}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App/App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}